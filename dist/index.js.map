{"version":3,"file":"index.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/components/right.js","../src/utils.js","../src/components/left.js","../src/components/contacts.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { useEffect, useState } from 'react';\nimport { Card, Checkbox, Radio, Col, Input, List, message, Pagination } from 'antd';\nimport styles from './contacts.less';\n\nconst { Search } = Input;\n\nexport default ({\n                  selectAllText, searchUserPlaceholder, deptSearch, userData,\n                  handleSearch, handleSearchUser, deptId, updateSelectUsers, debug = false,\n                  setOnSearch, nameKey, setNameKey, selectUser, setSelectUser,\n                  userNameKey, radio\n                }) => {\n\n  const [selectAll, setSelectAll] = useState(false);\n\n  // 当列表数据发生变化时，重新计算全选\n  useEffect(() => {\n    calculateSelectAll(selectUser);\n  }, [userData]);\n\n  // 当选中人数据发生变化，重新计算全选\n  useEffect(() => {\n    calculateSelectAll(selectUser);\n  }, [selectUser]);\n\n  /**\n   * 姓名搜索为空时处理\n   * @param e\n   */\n  const handleSearchChange = e => {\n    if (!e.target.value) {\n      setOnSearch(false);\n      setNameKey(null);\n    }\n  };\n\n  /**\n   * 判断用户是否选择\n   * @param data\n   * @return {boolean}\n   */\n  const isUserCheck = data => {\n    const result = selectUser.find(value => value.userId === data.userId);\n    return !!result;\n  };\n\n  /**\n   * 点击用户列表的回调\n   * @param e\n   */\n  const onUserCheck = e => {\n    const {\n      target: { checked, data },\n    } = e;\n    const tmp = [];\n    let newSelectUser;\n    if (checked) {\n      tmp.push(data);\n      newSelectUser = selectUser.concat(tmp);\n    } else {\n      const result = selectUser.filter(value => value.userId !== data.userId);\n      newSelectUser = result.concat(tmp);\n    }\n    setSelectUser(newSelectUser);\n    updateSelectUsers(newSelectUser);\n    if (checked) {\n      calculateSelectAll(newSelectUser);\n    } else {\n      setSelectAll(false);\n    }\n  };\n\n  /**\n   * Radio时点击用户列表的回调\n   * @param e\n   */\n  const onUserRadioCheck = e => {\n    const {\n      target: { checked, data },\n    } = e;\n    let newSelectUser = [];\n    if (checked) {\n      newSelectUser.push(data);\n    } else {\n    }\n    setSelectUser(newSelectUser);\n    updateSelectUsers(newSelectUser);\n  };\n\n  /**\n   * 翻页查询处理\n   * @param page\n   */\n  const onPageChange = page => {\n    if (debug) {\n      window.console.log(page)\n    }\n    if (handleSearchUser) {\n      console.log(page)\n      handleSearchUser(page, nameKey, deptId);\n      setOnSearch(true);\n    } else {\n      message.error('search function not found.');\n    }\n  };\n\n  /**\n   * 计算是否全部选中\n   * @param newSelectUser\n   */\n  const calculateSelectAll = (newSelectUser) => {\n    let tmp = [];\n    userData.records.forEach(value => {\n      tmp.push(value);\n    });\n    if (tmp.length === 0) {\n      setSelectAll(false);\n      return;\n    }\n    let count = 0;\n    tmp.forEach(val => {\n      const result = newSelectUser.find(valUser => val.userId === valUser.userId);\n      if (result) {\n        count += 1;\n      }\n    });\n    setSelectAll(count === tmp.length);\n  };\n\n  /**\n   * 点击用户全选的回调\n   * @param e\n   */\n  const onCheckAll = e => {\n    const {\n      target: { checked },\n    } = e;\n    setSelectAll(checked);\n    const tmp = [];\n    userData.records.forEach(value => {\n      tmp.push(value);\n    });\n    let newSelectUser = [];\n    if (checked) {\n      // 如果是选中，遍历添加，重复的不添加\n      tmp.forEach(val => {\n        const result = selectUser.find(valUser => val.userId === valUser.userId);\n        if (!result) {\n          newSelectUser.push(val);\n        }\n      });\n      newSelectUser = selectUser.concat(newSelectUser);\n    } else {\n      // 不选中的遍历删除\n      selectUser.forEach(val => {\n        const result = tmp.find(valUser => val.userId === valUser.userId);\n        if (!result) {\n          newSelectUser.push(val);\n        }\n      });\n    }\n    updateSelectUsers(newSelectUser);\n    setSelectUser(newSelectUser);\n  };\n\n  return (\n    <Col xs={12} sm={12} md={12} lg={12} xl={12} className={styles.treeLeft}>\n      <Card className={styles.card}>\n        {deptSearch && (\n          <Search\n            placeholder={searchUserPlaceholder}\n            onSearch={handleSearch}\n            onChange={handleSearchChange}\n          />\n        )}\n        {deptSearch && <br />}\n        <List\n          size=\"small\"\n          bordered={false}\n          dataSource={userData.records}\n          split={false}\n          renderItem={item => {\n            return (\n              <List.Item>\n                <div className={styles.itemDiv}>\n                  {radio &&\n                  <Radio\n                    className={styles.checkbox}\n                    checked={isUserCheck(item)}\n                    data={item}\n                    onChange={onUserRadioCheck}\n                  >\n                    {item[userNameKey]}\n                  </Radio>\n                  }\n                  {!radio &&\n                  <Checkbox\n                    className={styles.checkbox}\n                    data={item}\n                    checked={isUserCheck(item)}\n                    onChange={onUserCheck}\n                  >\n                    {item[userNameKey]}\n                  </Checkbox>}\n                  <div className={styles.deptName}>{item.deptName}</div>\n                </div>\n              </List.Item>\n            );\n          }}\n        />\n      </Card>\n      <div className={styles.pagination}>\n        {!radio &&\n        <Checkbox onChange={onCheckAll} className={styles.checkbox} checked={selectAll}>\n          {selectAllText}\n        </Checkbox>\n        }\n        <Pagination\n          className={styles.pageNoe}\n          simple\n          current={userData.current || 1}\n          pageSize={userData.size}\n          total={userData.total}\n          onChange={onPageChange}\n        />\n      </div>\n    </Col>)\n}\n","import React from 'react';\nimport { Tree } from 'antd';\n\nconst TreeNode = Tree.TreeNode;\n\n/**\n *\n * @param nodes\n * @param deptNameKey\n * @returns {*} tree nodes.\n */\nexport function makeTreeNode(nodes, deptNameKey) {\n  return nodes.map(v => {\n    const nodeKey = v.id;\n    return (\n      <TreeNode data={v} title={v[deptNameKey]} key={nodeKey}>\n        {v.children.length > 0 && makeTreeNode(v.children, deptNameKey)}\n      </TreeNode>\n    );\n  });\n}\n","import React, { useState } from 'react';\nimport { Card, Checkbox, Col, List, message, Tree, Input } from 'antd';\nimport styles from './contacts.less';\nimport { makeTreeNode } from '../utils';\n\nconst { Search } = Input;\n\nexport default ({\n                  searchDeptPlaceholder, deptSearch, deptCheckBox, deptTree = [],\n                  handleSearchUser, setDeptId, setOnSearch, deptTreeNode, setDeptTreeNode,\n                  updateSelectDept, deptNameKey, radio, checkStrictly\n                }) => {\n\n  const [deptSearchResult, setDeptSearchResult] = useState([]);\n  const [onDeptSearch, setOnDeptSearch] = useState(false);\n\n  const onSearchDeptChange = e => {\n    if (!e.target.value) {\n      setDeptSearchResult([]);\n      setOnDeptSearch(false);\n    }\n  };\n\n  /**\n   * 根据关键字搜索部门树\n   * @param key\n   * @param deptTree\n   * @param dataList\n   */\n  const searchByKey = (key, deptTree, dataList) => {\n    deptTree.forEach(item => {\n      if (item.name.indexOf(key) > -1) {\n        dataList.push(item);\n      }\n      if (item.children && item.children.length > 0) {\n        searchByKey(key, item.children, dataList);\n      }\n    });\n  };\n\n  /**\n   * 根据关键字搜索部门\n   * @param value\n   */\n  const onSearchDept = value => {\n    if (!value) {\n      setDeptSearchResult([]);\n      setOnDeptSearch(!!value);\n    } else {\n      const dataList = [];\n      searchByKey(value.trim(), deptTree, dataList);\n      setDeptSearchResult(dataList);\n      setOnDeptSearch(!!value);\n    }\n  };\n\n  /**\n   * 生成选择树\n   * @param data\n   * @return {*}\n   */\n  const makeCheckedKeys = data => {\n    return data.map(v => v.id);\n  };\n\n  /**\n   * 点击部门树时传递部门id到回调里面\n   * @param selectedKeys 选择的部门id\n   */\n  const onTreeSelect = selectedKeys => {\n    if (handleSearchUser) {\n      const [deptId] = selectedKeys;\n      handleSearchUser(0, null, deptId);\n      setOnSearch(true);\n      setDeptId(deptId);\n    } else {\n      message.error('search function not found.');\n    }\n  };\n\n  /**\n   * 点击树的check box 回调\n   * @param checkedKeys\n   * @param checked\n   * @param checkedNodes\n   * @param node\n   */\n  const onDeptTreeCheck = (checkedKeys, { checked, checkedNodes, node }) => {\n    const tmp = [];\n    checkedNodes.forEach(v => {\n      const {\n        props: { data },\n      } = v;\n      tmp.push(data);\n    });\n    updateSelectDept(tmp);\n    setDeptTreeNode(tmp);\n  };\n\n  /**\n   * 判断部门是否选择\n   * @param data\n   * @return {boolean}\n   */\n  const isDeptCheck = data => {\n    const result = deptTreeNode.find(value => value.id === data.id);\n    return !!result;\n  };\n\n  /**\n   * 部门查询结果点击checkbox\n   * @param e\n   */\n  const onDeptCheck = e => {\n    const {\n      target: { checked, data },\n    } = e;\n    const tmp = [];\n    if (checked) {\n      tmp.push(data);\n      updateSelectDept(deptTreeNode.concat(tmp));\n      setDeptTreeNode(deptTreeNode.concat(tmp));\n    } else {\n      const result = deptTreeNode.filter(value => value.id !== data.id);\n      updateSelectDept(result.concat(tmp));\n      setDeptTreeNode(result.concat(tmp));\n    }\n  };\n\n  /**\n   * 点击部门查询结果后，传递部门ID给外部查询\n   * @param item\n   */\n  const onDeptSelect = item => {\n    if (handleSearchUser) {\n      handleSearchUser(0, null, item.id);\n      setOnSearch(true);\n      setDeptId(item.id);\n    } else {\n      message.error('search function not found.');\n    }\n  };\n\n  return (\n    <Col xs={12} sm={12} md={12} lg={12} xl={12}>\n      <Card className={styles.card}>\n        {deptSearch &&\n        <Search placeholder={searchDeptPlaceholder} onSelect={onSearchDeptChange}\n                onSearch={onSearchDept} />}\n        {deptSearch && <br />}\n        {!onDeptSearch && (\n          <Tree\n            checkable={deptCheckBox && !radio}\n            checkedKeys={makeCheckedKeys(deptTreeNode)}\n            onSelect={onTreeSelect}\n            onCheck={onDeptTreeCheck}\n            checkStrictly={checkStrictly}\n          >\n            {makeTreeNode(deptTree, deptNameKey)}\n          </Tree>\n        )}\n        {onDeptSearch && (\n          <List\n            size=\"small\"\n            bordered={false}\n            dataSource={deptSearchResult}\n            split={false}\n            renderItem={item => {\n              return (\n                <List.Item>\n                  <div className={styles.itemDiv}>\n                    {deptCheckBox &&\n                    <Checkbox\n                      className={styles.checkbox}\n                      data={item}\n                      checked={isDeptCheck(item)}\n                      onChange={onDeptCheck}\n                    />}\n                    <span style={{ marginLeft: '10px' }}\n                          onClick={() => onDeptSelect(item)}>{item[deptNameKey]}</span>\n                  </div>\n                </List.Item>\n              );\n            }}\n          />\n        )}\n      </Card>\n    </Col>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Col,\n  Form,\n  Input,\n  Row,\n  Spin,\n  Tag,\n  Icon,\n  message,\n} from 'antd';\n\nimport Right from './right';\nimport Left from './left';\nimport styles from './contacts.less';\n\nconst { Search } = Input;\n\nconst Contacts = (props) => {\n\n  const {\n    users,\n    loading = false,\n    searchResult,\n    userSearch = false,\n    searchUserPlaceholder,\n    numberColor, totalShowText, handleSearchUser, updateSelectUsers, defaultUserSelected,\n    defaultDeptSelected, updateSelectDept, userNameKey, deptNameKey, radio, radioShowText, checkStrictly\n  } = props;\n\n  const [deptTreeNode, setDeptTreeNode] = useState([]);\n  const [selectUser, setSelectUser] = useState([]);\n  const [onSearch, setOnSearch] = useState(false);\n  const [deptId, setDeptId] = useState(null);\n  const [nameKey, setNameKey] = useState(null);\n\n  useEffect(() => {\n    updateSelectUsers(defaultUserSelected);\n    setSelectUser(defaultUserSelected);\n  }, [defaultUserSelected]);\n\n  useEffect(() => {\n    updateSelectDept(defaultDeptSelected);\n    setDeptTreeNode(defaultDeptSelected);\n  }, [defaultDeptSelected]);\n\n  /**\n   *  点击查询回调，会把name key 和 dept id 回传，外部调用查询用\n   * @param nameKey 名字搜索关键字\n   * @param deptId 部门id\n   */\n  const handleSearch = (nameKey = null) => {\n    if (handleSearchUser) {\n      handleSearchUser(0, nameKey, null);\n      setOnSearch(true);\n      setNameKey(nameKey);\n    } else {\n      message.error('search function not found.');\n    }\n  };\n\n  /**\n   * 生成显示的部门Tag\n   * @param v\n   * @return {*}\n   */\n  const makeDeptTag = v => (\n    <Tag\n      key={v.id}\n      className={styles.deptTag}\n      onClick={e => {\n        e.preventDefault();\n        unCheckDept(v);\n      }}\n    >\n      {v[deptNameKey]} <Icon type=\"close-circle\" theme=\"filled\" />\n    </Tag>\n  );\n\n  /**\n   *\n   * @param data\n   */\n  const unCheckDept = data => {\n    const tmp = [];\n    const result = deptTreeNode.filter(value => value.id !== data.id);\n    const dept = result.concat(tmp);\n    updateSelectDept(dept);\n    setDeptTreeNode(dept);\n  };\n\n  /**\n   * 生成显示的用户Tag\n   * @param v\n   * @return {*}\n   */\n  const makeUserTag = v => {\n    return (\n      <Tag\n        key={v.userId}\n        className={styles.userTag}\n        onClick={e => {\n          e.preventDefault();\n          unCheckUser(v);\n        }}\n      >\n        {v[userNameKey]} <Icon type=\"close-circle\" theme=\"filled\" />\n      </Tag>\n    );\n  };\n\n  /**\n   * 点击用户Tag时取消选择\n   * @param data\n   */\n  const unCheckUser = data => {\n    const tmp = [];\n    const result = selectUser.filter(value => value.userId !== data.userId);\n    const userList = result.concat(tmp);\n    updateSelectUsers(userList);\n    setSelectUser(userList);\n  };\n\n  const makeShowMsg = () => {\n    if (!radio) {\n      const tmp = totalShowText.split('$');\n      let font = '';\n      let end = '';\n      if (tmp.length === 2) {\n        font = tmp[0];\n        end = tmp[1];\n      } else {\n        font = totalShowText;\n      }\n      return (\n        <div>{font} <span\n          style={{ color: numberColor }}>{deptTreeNode.length + selectUser.length}</span> {end}\n        </div>\n      );\n    } else {\n      let name = '';\n      if (selectUser.length > 0) {\n        const [use] = selectUser;\n        name = use[userNameKey];\n      }\n      return (\n        <div>{radioShowText} <span\n          style={{ color: numberColor }}>{name}</span>\n        </div>\n      );\n    }\n  };\n\n  let userData;\n  if (onSearch) {\n    userData = searchResult;\n  } else {\n    userData = users;\n  }\n\n\n  return (\n    <div style={{ height: '100%' }}>\n      <Spin spinning={loading}>\n        {userSearch && (\n          <Row>\n            <Search placeholder={searchUserPlaceholder} onSearch={handleSearch} />\n          </Row>\n        )}\n        {userSearch && <br />}\n        <Row>\n          <Left {...props} setDeptId={setDeptId} setOnSearch={setOnSearch}\n                deptTreeNode={deptTreeNode} setDeptTreeNode={setDeptTreeNode}\n                handleSearchUser={handleSearchUser} checkStrictly={checkStrictly}\n                updateSelectDept={updateSelectDept} deptNameKey={deptNameKey} radio={radio} />\n          <Right {...props} userData={userData} onSearch={onSearch} setOnSearch={setOnSearch}\n                 nameKey={nameKey} setNameKey={setNameKey} selectUser={selectUser}\n                 handleSearch={handleSearch} userNameKey={userNameKey}\n                 setSelectUser={setSelectUser} radio={radio} />\n          <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n            <Form colon={false}>\n              <Form.Item className={styles.label} label={makeShowMsg()}>\n                {!radio &&\n                <div className={styles.resultDiv}>\n                  {deptTreeNode && deptTreeNode.map(v => makeDeptTag(v))}\n                  {selectUser && selectUser.map(v => makeUserTag(v))}\n                </div>\n                }\n              </Form.Item>\n            </Form>\n          </Col>\n        </Row>\n      </Spin>\n    </div>\n  )\n\n};\n\nContacts.propTypes = {\n  deptTree: PropTypes.array.isRequired,\n  users: PropTypes.object,\n  loading: PropTypes.bool,\n  searchResult: PropTypes.object,\n  handleSearchUser: PropTypes.func.isRequired,\n  deptSearch: PropTypes.bool,\n  updateSelectUsers: PropTypes.func.isRequired,\n  updateSelectDept: PropTypes.func.isRequired,\n  deptCheckBox: PropTypes.bool,\n  searchDeptPlaceholder: PropTypes.string,\n  searchUserPlaceholder: PropTypes.string,\n  defaultUserSelected: PropTypes.array,\n  defaultDeptSelected: PropTypes.array,\n  debug: PropTypes.bool,\n  numberColor: PropTypes.string,\n  selectAllText: PropTypes.string,\n  totalShowText: PropTypes.string,\n  userNameKey: PropTypes.string,\n  deptNameKey: PropTypes.string,\n  radio: PropTypes.bool,\n  radioShowText: PropTypes.string,\n  checkStrictly:PropTypes.bool\n};\n\nContacts.defaultProps = {\n  users: {\n    records: [],\n  },\n  loading: false,\n  searchResult: {\n    records: [],\n  },\n  deptSearch: true,\n  deptCheckBox: true,\n  searchDeptPlaceholder: '请输入搜索部门',\n  searchUserPlaceholder: '请输入搜索姓名',\n  defaultUserSelected: [],\n  defaultDeptSelected: [],\n  numberColor: '#1B9AFF',\n  debug: false,\n  selectAllText: '全选',\n  totalShowText: '共选择了$个',\n  userNameKey: 'username',\n  deptNameKey: 'name',\n  radio: false,\n  radioShowText: '已经选择',\n  checkStrictly:false\n};\n\nexport default Contacts;\n"],"names":["Search","selectAllText","searchUserPlaceholder","deptSearch","userData","handleSearch","handleSearchUser","deptId","updateSelectUsers","debug","setOnSearch","nameKey","setNameKey","selectUser","setSelectUser","userNameKey","radio","useState","selectAll","setSelectAll","useEffect","calculateSelectAll","handleSearchChange","e","target","value","isUserCheck","data","result","find","userId","onUserCheck","checked","tmp","newSelectUser","push","concat","filter","onUserRadioCheck","onPageChange","page","window","console","log","error","records","forEach","length","count","val","valUser","onCheckAll","React","styles","treeLeft","card","item","itemDiv","checkbox","deptName","pagination","pageNoe","current","size","total","TreeNode","makeTreeNode","nodes","deptNameKey","map","v","nodeKey","id","children","searchDeptPlaceholder","deptCheckBox","deptTree","setDeptId","deptTreeNode","setDeptTreeNode","updateSelectDept","checkStrictly","deptSearchResult","setDeptSearchResult","onDeptSearch","setOnDeptSearch","onSearchDeptChange","searchByKey","key","dataList","name","indexOf","onSearchDept","trim","makeCheckedKeys","onTreeSelect","selectedKeys","onDeptTreeCheck","checkedKeys","checkedNodes","node","props","isDeptCheck","onDeptCheck","onDeptSelect","marginLeft","Contacts","users","loading","searchResult","userSearch","numberColor","totalShowText","defaultUserSelected","defaultDeptSelected","radioShowText","onSearch","makeDeptTag","deptTag","preventDefault","unCheckDept","dept","makeUserTag","userTag","unCheckUser","userList","makeShowMsg","split","font","end","color","use","height","label","resultDiv","propTypes","PropTypes","array","isRequired","object","bool","func","string","defaultProps"],"mappings":"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"}